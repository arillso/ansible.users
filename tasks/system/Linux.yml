---
# tasks file for arillso.users

- name: Linux | adding users
  become: yes
  user:
    name: "{{ item.username }}"
    uid: "{{ item.uid | default(omit) }}"
    home: "{{ item.home | default(users_home ~ '/' ~ item.username ) }}"
    comment: "{{ item.name | default(omit) }}"
    system: "{{ item.system | default(omit) }}"
    generate_ssh_key: "{{ item.ssh_key_generate | default(omit) }}"
    group: "{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else (users_group if users_group else omit)) }}"
    groups: "{{ item.groups|join(',') if item.groups is defined else users_groups|join(',')}}"
    append: "{{ item.append | default(omit) }}"
    password: "{{ item.password | default(lookup('password')) }}"
    ssh_key_file: ".ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}"
    ssh_key_passphrase: "{{ item.ssh_key_password | default(omit) }}"
    ssh_key_bits: "{{ item.ssh_key_bits | default(users_ssh_key_bits) }}"
    createhome: "{{ item.home_create | default(omit) }}"
    shell: "{{ item.shell | default(omit) }}"
    update_password: "{{ item.update_password | default(omit) }}"
  with_items: "{{ users }}"
  tags:
    - configuration

- name: Linux | setting user's home permission
  become: yes
  file:
    dest: "{{ item.home | default(users_home ~ '/' ~ item.username) }}"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else (users_group if users_group else item.username) }}"
    mode: "{{ item.home_mode if item.home_mode is defined else users_home_mode }}"
  when: item.home_create is not defined or item.home_create
  with_items: "{{ users }}"
  tags:
    - configuration

- name: Linux | adding user's .ssh directory
  become: yes
  file:
    path: "{{ item.home | default(users_home ~ '/' ~ item.username) }}/.ssh"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else (users_group if users_group else item.username) }}"
    state: directory
    mode: '0700'
  when: item.home_create is not defined or item.home_create
  with_items: "{{ users }}"
  tags:
    - configuration

- name: Linux | adding user's authorized keys
  become: yes
  authorized_key:
    key: "{{ item.authorized_keys | default([]) | join('\n') }}"
    user: "{{ item.username }}"
    exclusive: "{{ item.authorized_keys_exclusive | default(users_authorized_keys_exclusive) }}"
  when: item.home_create is not defined or item.home_create
  with_items: "{{ users }}"
  tags:
    - configuration
