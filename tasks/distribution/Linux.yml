---
# tasks file for arillso.users

- name: 'Linux : adding users'
  become: true
  user:
    name: '{{ item.username }}'
    uid: '{{ item.uid | default(omit) }}'
    home: "{{ item.home | default(users_home ~ '/' ~ item.username ) }}"
    comment: '{{ item.name | default(omit) }}'
    system: '{{ item.system | default(omit) }}'
    generate_ssh_key: '{{ item.ssh_key_generate | default(omit) }}'
    group: '{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else omit) }}'
    groups: "{{ item.groups|join(',') if item.groups is defined else users_groups|join(',') }}"
    append: '{{ item.append | default(omit) }}'
    password: "{{ item.password | default(lookup('password')) }}"
    ssh_key_file: '.ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}'
    ssh_key_passphrase: '{{ item.ssh_key_password | default(omit) }}'
    ssh_key_bits: '{{ item.ssh_key_bits | default(users_ssh_key_bits) }}'
    createhome: '{{ item.home_create | default(omit) }}'
    shell: '{{ item.shell | default(omit) }}'
    update_password: '{{ item.update_password | default(omit) }}'
  with_items: '{{ users }}'
  no_log: >
    '{{ true if item.password is defined or
      item.authorized_keys is defined else false }}'
  tags:
    - configuration

- name: 'Linux : setting users home permission'
  become: true
  file:
    dest: "{{ item.home | default(users_home ~ '/' ~ item.username) }}"
    owner: '{{ item.username }}'
    group: '{{ item.group if item.group is defined else item.username }}'
    mode: '{{ item.home_mode if item.home_mode is defined else users_home_mode }}'
  when: item.home_create is not defined or item.home_create
  with_items: '{{ users }}'
  no_log: >
    '{{ true if item.password is defined or
      item.authorized_keys is defined else false }}'
  tags:
    - configuration

- name: 'Linux : adding users .ssh directory'
  become: true
  file:
    path: "{{ item.home | default(users_home ~ '/' ~ item.username) }}/.ssh"
    owner: '{{ item.username }}'
    group: '{{ item.group if item.group is defined else item.username }}'
    state: directory
    mode: '0700'
  when: item.home_create is not defined or item.home_create
  with_items: '{{ users }}'
  no_log: >
    '{{ true if item.password is defined or
     item.authorized_keys is defined else false }}'
  tags:
    - configuration

- name: 'Linux : adding users authorized keys'
  become: true
  authorized_key:
    key: "{{ item.authorized_keys | default([]) | join('\n') }}"
    user: '{{ item.username }}'
    exclusive: '{{ item.authorized_keys_exclusive | default(users_authorized_keys_exclusive) }}'
  when: item.home_create is not defined or item.home_create
  with_items: '{{ users }}'
  no_log: >
    '{{ true if item.password is defined
     or item.authorized_keys is defined else false }}'
  tags:
    - configuration
